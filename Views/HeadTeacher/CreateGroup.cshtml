@model CreateGroupViewModel
@{
    ViewData["Title"] = "Створення нової групи";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-sm">
                <div class="card-header bg-white">
                    <h4 class="card-title mb-0">
                        <i class="fas fa-plus-circle text-primary me-2"></i>
                        Створення нової групи
                    </h4>
                </div>
                <div class="card-body">
                    <form asp-action="CreateGroup" asp-controller="HeadTeacher" method="post">
                        <div class="mb-4">
                            <label asp-for="Name" class="form-label">Назва групи</label>
                            <input asp-for="Name" class="form-control" placeholder="Введіть назву групи">
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>

                        <div class="mb-4">
                            <label asp-for="TeacherId" class="form-label">Вихователь</label>
                            <select asp-for="TeacherId" class="form-select"
                                    asp-items="@(new SelectList(Model.Teachers, "Value", "Text"))">
                                <option value="">-- Оберіть вихователя --</option>
                            </select>
                            <span asp-validation-for="TeacherId" class="text-danger"></span>
                        </div>

                        <div class="mb-4">
                            <label asp-for="Capacity" class="form-label">Кількість місць</label>
                            <input asp-for="Capacity" type="number" class="form-control" min="1">
                            <span asp-validation-for="Capacity" class="text-danger"></span>
                        </div>

                        <div class="mb-4">
                            <label asp-for="Price" class="form-label">Вартість на місяць</label>
                            <div class="input-group">
                                <input asp-for="Price" type="number" class="form-control" min="0.01" step="0.01">
                                <span class="input-group-text">₴</span>
                            </div>
                            <span asp-validation-for="Price" class="text-danger"></span>
                        </div>

                        <div class="d-flex justify-content-end gap-2">
                            <a asp-action="Groups" class="btn btn-outline-secondary">
                                <i class="fas fa-times me-2"></i>
                                Скасувати
                            </a>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-check me-2"></i>
                                Створити групу
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.querySelector('form');
            form.addEventListener('submit', function (e) {
                let isValid = true;

                // Проверка названия группы
                const nameInput = document.querySelector('[name="Name"]');
                if (!nameInput.value.trim()) {
                    isValid = false;
                    nameInput.classList.add('is-invalid');
                } else {
                    nameInput.classList.remove('is-invalid');
                }

                // Проверка выбора воспитателя
                const teacherSelect = document.querySelector('[name="TeacherId"]');
                if (!teacherSelect.value) {
                    isValid = false;
                    teacherSelect.classList.add('is-invalid');
                } else {
                    teacherSelect.classList.remove('is-invalid');
                }

                // Проверка количества мест
                const capacityInput = document.querySelector('[name="Capacity"]');
                const capacity = parseInt(capacityInput.value);
                if (isNaN(capacity) || capacity < 1) {
                    isValid = false;
                    capacityInput.classList.add('is-invalid');
                } else {
                    capacityInput.classList.remove('is-invalid');
                }

                // Проверка цены
                const priceInput = document.querySelector('[name="Price"]');
                const price = parseFloat(priceInput.value);
                if (isNaN(price) || price <= 0) {
                    isValid = false;
                    priceInput.classList.add('is-invalid');
                } else {
                    priceInput.classList.remove('is-invalid');
                }

                if (!isValid) {
                    e.preventDefault();
                }
            });
        });
    </script>
}